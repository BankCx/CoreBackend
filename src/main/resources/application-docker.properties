# Docker-specific configuration for Core Backend

# Database Configuration for Docker
spring.datasource.url=jdbc:postgresql://postgres:5432/bankofcx
spring.datasource.username=admin
spring.datasource.password=admin123
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Server Configuration
server.port=8080
server.servlet.context-path=/api

# Security Configuration
spring.security.user.name=admin
spring.security.user.password=admin123

# JWT Configuration
jwt.secret=docker_secret_key_for_demo_application_only
jwt.expiration=86400000

# Logging Configuration for Docker
logging.level.com.checkmarx.bank=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Redis Configuration for Docker
spring.redis.host=redis
spring.redis.port=6379
spring.redis.timeout=2000ms
spring.redis.database=0

# Kafka Configuration for Docker
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=bankofcx-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# Docker Health Check
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
