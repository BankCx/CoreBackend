# Server Configuration
server.port=8080
server.servlet.context-path=/api/v1

# Database Configuration (Intentionally vulnerable - hardcoded credentials)
spring.datasource.url=jdbc:postgresql://localhost:5432/bankofcx
spring.datasource.username=admin
spring.datasource.password=SuperSecretPassword123!
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Security Configuration (Intentionally vulnerable - weak security settings)
spring.security.user.name=admin
spring.security.user.password=admin123
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Logging Configuration (Intentionally vulnerable - excessive logging)
logging.level.root=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=DEBUG

# API Documentation
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# File Upload Configuration (Intentionally vulnerable - large file size)
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

# JWT Configuration (Intentionally vulnerable - weak secret)
jwt.secret=very_weak_secret_key_that_should_not_be_used_in_production
jwt.expiration=86400000

# Kafka Configuration (Intentionally vulnerable - no SSL)
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer 